#!/usr/node/bin/node --abort_on_uncaught_exception

var bunyan = require('bunyan');
var fs = require('fs');
var path = require('path');
var UrAgent = require('./ur-agent').UrAgent;

var log = bunyan.createLogger({name: 'mock-ur-agent', level: 'debug'});
var mockCNs = {};
var MOCKCN_DIR = '/mockcn';

// Generate a hex representation of a random four byte string.
function genId() {
    return Math.floor(Math.random() * 0xffffffff).toString(16);
}

function monitorMockCNs() {

    function refreshMockCNs () {
        fs.readdir(MOCKCN_DIR, function (err, files) {
            fileCache = {};

            files.forEach(function (file) {
                fileCache[file] = true;
                if (!mockCNs.hasOwnProperty(file)) {
                    // create an instance for this one
                    log.info('starting instance for mock CN ' + file);
                    mockCNs[file] = new UrAgent({
                        sysinfoFile: '/mockcn/' + file + '/sysinfo.json',
                        setupStateFile: '/mockcn/' + file + '/setup.json',
                        urStartupFilePath: '/tmp/' + file + '.tmp-' + genId(),
                        mockCNServerUUID: file
                    });
                }
            });

            Object.keys(mockCNs).forEach(function (cn) {
                if (!fileCache.hasOwnProperty(cn)) {
                    // remove instance for this one
                    log.info('removing instance for mock CN ' + cn);
                    mockCNs[cn].shutdown();
                    delete mockCNs[cn];
                }
            });
        });
    }

    // Setup fs.watcher for this DIR to add and remove instances when
    fs.watch(MOCKCN_DIR, function () {
        // we don't care about *what* event just happened, just that one did
        refreshMockCNs();
    })

    // call refreshMockCNs() to set the initial mock CNs
    refreshMockCNs();
}

monitorMockCNs();

            /*
             * We have a mock CN not a real one, so instead of looking at the
             * host info we'll spin up an UrAgent Instance for each directory
             * that exists in /mockcn.
             */

