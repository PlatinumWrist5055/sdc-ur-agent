{toc}

h1. The Ur Agent - Live-image Boot-strapping Agent

h2. Objective

When a Node or Head Node machine starts up, it will require a way of boot-strapping various sub-systems such as zpool creation, agents, etc, based on the configuration and role of the machine. The node agent Ur, will listen on AMQP for scripts to execute.

It's important to note, however, that we will not be able to update the operating system live image, so the Ur agent must be reasonably future proof. To that end, it should be as simple as possible and then load additional agents
with more logic at a later time.

h2. What it does

In a nutshell, the Ur agent connects to an AMQP broker, emits a message to signal it is listening (perhaps with some an ID that is super unique to the Node machine) and waits. Other software (probably on the head node) will then send scripts to be executed on the Node (identified by said id), with Ur replying back with the process return code and the script's captured STDOUT and STDERR.

TL; DR:

- start up
- emit "start up" message

- receive message with script to execute
- execute script
- reply with script exit code and captured stdout and stderr
- repeat


h2. How it works

On startup, the Ur agent will post a message to the broker (found via multicast dns?). This message is simply to indicate, "Hey\! I have started up and am ready to be told what to do". The head node will then request that a script be executed. This first script to be run by Ur will discover the machine's configuration (perhaps with Ohai or something similar) and report it to the Head Node.

At this point, the Head Node will take note that this new Node is ready to go and perhaps record this information somewhere, ready for an administrator or customer to decide what to do with the node. After this  user clicks on the "provision machine" button, the head node sends another script to Ur.

This script then starts the installation process on the machine. Storage is initialized, and other interesting stuff happens. Somewhere in this process Ur fetches and the "agent agent" which then fetches and installs all the other agents.

TL; DR:

- Ur starts up
- looks up broker details
- connects to broker
- emits start up message
- receive configuration script to run
- head node records node information
- replies back with results

...

- receive "machine provision" script
- storage initialized
- Ur fetches and installs agent agent
- agent agent fetches other agents


h2. Dependencies

* Node.js (available on the live image)
* node-amqp
* meta agent, agentd, agent agent, whatever

h3. Communicating with Ur

h4. Ur startup

On start up, Ur will run a script. This script will grab some basic information such as what pools are available, if any.

In these examples, <node-id> should be the admin NIC's mac address as obtained
from the "/usr/bin/bootparams" script.

==> routing-key: ur.startup.<node-id>

{ execute: "file"
, file: "scripts/pools.sh"
, timestamp: "2010-11-10T..."
}

h4. Commands

Ur command routing keys should contain a unique token, {{request-id}}, so that
when we reply back we can re-use this token to indentify which command this
was a reply to.

h5. Execute a file

<== routing-key: ur.execute.<node-id>.<request-id>

{ type: "file"
, file: "scripts/pools.sh"
, timestamp: "2010-11-10T..."
}

h5. Execute an arbitrary string

<== routing-key: ur.execute.<node-id>.<request-id>

{ type: "script"
, script: "#!/bin/bash\necho hello world\nexit 0"
, timestamp: "2010-11-10T..."
}

h4. Ur execution replies:

On reply to an `execute` command:

==> routing-key: ur.execute-reply.<node-id>.<the-request-id>

{ exit_status: 0
, stdout: "hello world\n";
, stderr: ""
}

h2. Story Tests

* Ur starts up and emits a message with its machine's "id".
* Ur receives a message with a script to execute and runs it.
* Ur replies back with the scripts return code, stdout and stderr.
* Ur is deployed with live image

h2. Questions

* How do we uniquely identify a node?

h2. About Ur...

Desolate and Forsaken, Eerily Moaning Dark Winds
Murmur Incantations, Dusk Calls Forth Shadows
Spirits of the Glorious Dead Lingering, Bound to this Place
They Whisper of Untold Sagas, of Long Dead Cities
the Seven Shining Cities Sacred to the Aphkhallu
of Ages Past when the World was Young
When Babylon was Blessed of Marduk
and the Sound of her Armies was the Blare of Ominous War Horns
and the Clash of Immortal Cymbals
of Bronze Gates Arrayed in Splendour
and Magnificent Walls of Sunbaked Brick of Temples of Marble
and Bloodstained Altars, Long Before the Jeweled Throne of Ur
Fell Silent and Turned to Dust
Beneath the Endless Shifting Sands
and the Inevitable Vengeance of the Elements

-- Nile - To Dream of Ur

